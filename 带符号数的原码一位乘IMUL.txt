;########################################################
;-------------------- 分别读入乘数和被乘数，并计算符号 --------------------    
;		被乘数             			-->  R0 
;		被乘数(R0)       			-->  R2
;		0111 1111B  			-->  R1
;		R1 AND R0   			-->  R0
;		被乘数的数值位 (R0) 		--> 80H
;		1000 0000B			-->  R1
;		R1 AND R2			-->  R2
;		被乘数的符号位(R2)		-->  R3
;	
;		乘数					-->  R0
;		乘数(R0)				-->  R2
;		0111 1111B			-->  R1
;		R1 AND R0			-->  R0
;		乘数的数值位(R0)		-->  81H
;		1000 0000B			-->  R1
;		R1 AND R2			-->  R2
;		R2 + R3				-->  R3(最终符号)
;
;######################################################
$P 00 20 ; START: IN R0,00H 从 IN 单元读入被乘数
$P 01 00 ; 
$P 02 42 ;R0->R2暂存
$P 03 61 ;LDI R1,7FH 载入校验数 0111 1111B 
$P 04 7F ; 
$P 05 14 ;AND R1,R0 乘数数值位->R0
$P 06 D0 ; STA 00 80H,R0 存入主存#80 
$P 07 80 ; 
$P 08 61 ;LDI R1,7FH 载入校验数 1000 0000B 
$P 09 80 ; 
$P 0A 16 ;AND R1,R2 乘数符号位->R2
$P 0B 4B ;R2->R3暂存
$P 0C 20 ; IN R0,#00H 从 IN 单元读入乘数
$P 0D 00 ; 
$P 0E 42 ;R0->R2暂存
$P 0F 61 ;LDI R1,7FH 载入校验数 0111 1111B 
$P 10 7F ; 
$P 11 14 ;AND R1,R0 乘数数值位->R0
$P 12 D0 ; STA 00 81H,R0 存入主存#81 
$P 13 81 ; 
$P 14 61 ;LDI R1,7FH 载入校验数 1000 0000B 
$P 15 80 ; 
$P 16 16 ;AND R1,R2 乘数符号位->R2
$P 17 0B ;R2+R3 -> R3，R3为最终符号
$P 18 D3 ; STA 00 90H,R3 存入主存#90
$P 19 90 ; 




;########################################################
; 带符号8位原码乘法需要移位7次，但数值位为低7位，故多移位一次，可以等同于循环8次 
;		循环次数 			--> R0 --> 82H
;		部分积初始化00H 	--> R0
;		被乘数读一次即可	--> R1
;		x * y 			--> [R1,R0]
;########################################################

$P 1A 60 ; LDI R0,09H 计数值 09 (当计数值为2的时候停止程序)
$P 1B 09 ; 
$P 1C D0 ;STA 00 82H,RO 将计数值存入主存
$P 1D 82 ; 
$P 1E 60 ;LDI R0,00H 载入部分积 00 
$P 1F 00 ; 
$P 20 C1 ;LAD 00 81H,R1 读被乘数到 R1 
$P 21 81 ; 




;########################################################
;------------------------------ 开 始 循 环 ------------------------------
;			部分积	 <--> R0
;			被乘数 	<--> R1
;			溢出标志 	<--> R2：01H未溢出，00H溢出
;			移位位数 	<--> R3：移位位数
;########################################################

$P 22 C2 ;LAD 00 80H,R2 读乘数到 R2 
$P 23 80 ; 
$P 24 63 ;LDI R3,01H 载入校验数 01 
$P 25 01 ; 
$P 26 17 ;AND R3,R1 取乘数的最低位
$P 27 17 ; 无意义
$P 28 F0 ;BZC 00 33H 最低位为 0 则跳转
$P 29 33 ; 
$P 2A 08 ;ADD R0,R2 
$P 2B F0 ;BZC 00 31H 溢出则跳转
$P 2C 31 ; 
$P 2D 62 ;LDI R2 ,01H R2 作为高位部分积溢出标志，不溢出为 1 
$P 2E 01 ; 
$P 2F E0 ;JMP 00 33 
$P 30 33 ; 

;##########################不溢出###########################
$P 31 62 ;LDI R2,00H 溢出置 0 
$P 32 00 ; 


;########################################################
;------------------------------ 开 始 移 位 ------------------------------
;			循环移位   R0    	-->     -->	R1
;			R0部分积移出的最低位应给R1的最高位
;			JMP到6DH处理子程序专门处理
;########################################################
$P 33 63 ;LDI R3,01H 移位位数
$P 34 01 ; 
$P 35 AD ;RR R1,R3 		R1 右移 1 位
$P 36 AC ;RR R0,R3 		R0 右移 1 位
$P 37 E0 ;JMP 6D 判断部分积移出的数
$P 38 6D ; 

;##########################如果移出的位数是0###########################
$P 39 63 ;LDI R3,01111111B 载入屏蔽字
$P 3A 7F ; 
$P 3B 1D ;AND R1,R3 给 R1 最高位置 0 
$P 3C E0 ;JMP 00,41 
$P 3D 41 ; 

;##########################如果移出的位数是1###########################
$P 3E 63 ;LDI R3 10000000B 载入屏蔽字
$P 3F 80 ; 
$P 40 9D ;OR R1,R3 给 R1 最高位置 1 
$P 41 E0 ;JMP 64 判断部分积溢出
$P 42 64 ;


$P 43 9D ; 无意义


;##########################如果未溢出###########################
$P 44 63 ;LDI R3,01111111 置入屏蔽字
$P 45 7F ; 
$P 46 1C ;AND R0,R3 给 R0 高位置 0 
$P 47 E0 ;JMP 00,4CH 
$P 48 4C ; 


;##########################如果溢出了###########################
$P 49 63 ;LDI R3,10000000 置入屏蔽字
$P 4A 80 ; 
$P 4B 9C ;OR R0,R3 给 R0 高位置 1 



;########################################################
;------------------------------ 循 环 判 断 ------------------------------
;						记次--
;########################################################
$P 4C C2 ;LAD 82H,R2 取计数值
$P 4D 82 ; 
$P 4E B2 ;DEC R2 计数值自减 1 
$P 4F D2 ;STA 82H,R2 存计数值
$P 50 82 ; 
$P 51 63 ;LDI R3,01H 载入检验数
$P 52 01 ; 
$P 53 8E ;SUB R2,R3 判断是否循环 8 次
$P 54 F0 ;BZC 00 58H 执行到第八次时 00-01 有借位，跳转（结束）
$P 55 58 ; 
$P 56 E0 ;JMP 00 22H 返回继续循环
$P 57 22 ; 



;########################################################
;------------------------------ 循 环 结 束 ------------------------------
;				低位R1		-->		[84H]
;				高位R0		-->		[85H]
;						显示低位
;						显示高位
;########################################################
$P 58 D1 ;STA 84H,R1 低位存入主存#84H 
$P 59 84 ; 
$P 5A D0 ;STA 85H,R0 高位存入主存#85H 
$P 5B 85 ; 

$P 5C 34 ;OUT 40H,R1 显示低位
$P 5D 40 ;

$P 5E C3 ; 90H,R3 取符号位
$P 5F 90 ; 
$P 60 9C ; OR R0,R3 给 R0 最高位置 符号位  

$P 61 30 ;OUT 40H,R0 显示高位
$P 62 40 ; 
$P 63 50 ;HLT 停机



;########################################################
;---------------- 判断部分积最高位（数值位）取值 ----------------
;				如果溢出了，将R0最高位置1
;				如果未溢出，将R1最高位置0
;########################################################
$P 64 63;LDI R3,03H标志位清零
$P 65 03
$P 66 B3 ;DEC R3
$P 67 B3; 相当于LDI R3 00000001
$P 68 1B ;AND R3 R2
$P 69 F0;BZC 00 49H 高位部分积有溢出则给最高位置1
$P 6A 49
$P 6B E0;JMP 44 无溢出则给最高位置0
$P 6C 44


;########################################################
;----------------------------- 处理移出位数 -----------------------------
;				R3 <--> 10000000B
;				R0 <--> 部分积
;
;########################################################

$P 6D 63;LDI R3 10000000B
$P 6E 80
$P 6F 03;ADD R3 R0
$P 70 F0;BZC 3E 高位部分积移出的是1则给低位部分积最高位置1
$P 71 3E
$P 72 E0;JMP 39 移出的是0则给低位部分积的最高位置0
$P 73 39



$M 00 000001    ; NOP
$M 01 006D43    ; PC->AR, PC加1
$M 03 107070    ; MEM->IR, P<1>
$M 04 002405    ; RS->B
$M 05 04B201    ; A加B->RD
$M 06 002407    ; RS->B
$M 07 013201    ; A与B->RD
$M 08 106009    ; MEM->AR
$M 09 183001    ; IO->RD
$M 0A 106010    ; MEM->AR
$M 0B 000001    ; NOP
$M 0C 103001    ; MEM->RD
$M 0D 200601    ; RD->MEM
$M 0E 005341    ; A->PC
$M 0F 0000CB    ; NOP, P<3>
$M 10 280401    ; RS->IO
$M 11 103001    ; MEM->RD
$M 12 06B201    ; A加1->RD
$M 13 002414    ; RS->B
$M 14 05B201    ; A减B->RD
$M 15 002416    ; RS->B
$M 16 01B201    ; A或B->RD
$M 17 002418    ; RS->B
$M 18 02B201    ; A右环移->RD
$M 1B 005341    ; A->PC
$M 1C 10101D    ; MEM->A
$M 1D 10608C    ; MEM->AR, P<2>
$M 1E 10601F    ; MEM->AR
$M 1F 101020    ; MEM->A
$M 20 10608C    ; MEM->AR, P<2>
$M 21 063201    ;	
$M 28 101029    ; MEM->A
$M 29 00282A    ; RI->B
$M 2A 04E22B    ; A加B->AR
$M 2B 04928C    ; A加B->A, P<2>
$M 2C 10102D    ; MEM->A
$M 2D 002C2E    ; PC->B
$M 2E 04E22F    ; A加B->AR
$M 2F 04928C    ; A加B->A, P<2>
$M 30 001604    ; RD->A
$M 31 001606    ; RD->A
$M 32 006D48    ; PC->AR, PC加1
$M 33 006D4A    ; PC->AR, PC加1
$M 34 003401    ; RS->RD
$M 35 000035    ; NOP
$M 36 006D51    ; PC->AR, PC加1
$M 37 001612    ; RD->A
$M 38 001613    ; RD->A
$M 39 001615    ; RD->A
$M 3A 001617    ; RD->A
$M 3B 001621    ; NOP
$M 3C 006D5C    ; PC->AR, PC加1
$M 3D 006D5E    ; PC->AR, PC加1
$M 3E 006D68    ; PC->AR, PC加1
$M 3F 006D6C    ; PC->AR, PC加1