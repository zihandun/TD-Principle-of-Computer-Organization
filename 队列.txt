;######################################################
;------------------------------- 队列的初始化 ------------------------------    
; 					91 存储队头指针 
;					90 存储队尾指针  
;					A0为初始队头队尾指地址
;	低地址<================================ 高地址
;		[91H]								[90H]
;				出队：队头送显示，队头指针++
;				入队：输入送队尾，队尾指针++
;				队列大小：[90H] - [91H]
;######################################################
$P 01 61;LDI R1,A0
$P 02 A0; 
$P 03 D1;STA 91H,R1
$P 04 93;
$P 05 61;LDI R1,A0
$P 06 A0; 
$P 07 D1;STA 90H,R1
$P 08 93;

;######################################################
;------------------------------- 功能选择 ------------------------------    
;					1、入队
;					2、出队
;					3、展示元素个数
;					4、展示栈顶元素
;					5、退出
;######################################################
$P 09 20;IN R0,00H      ; 把00H端口的数据放入R0（输入操作数）  START
$P 0A 00;       
$P 0B 61;LDI R1,01H    ; 装入比较值
$P 0C 01;      
$P 0D 84;SUB R0,R1        ; 相减
$P 0E F0;BZC P1           ; 如果相减结果为0，跳转到P1（入队）
$P 0F 24 
$P 10 61;LDI R1,01H       ; 装入比较值
$P 11 01;
$P 12 84;SUB R0,R1        ; 相减
$P 13 F0;BZC P2           ; 如果相减结果为0，跳转到P2（出队）
$P 14 39 
$P 15 61;LDI R1,02H; 装入比较值 
$P 16 02;        
$P 17 84;SUB R0,R1        ; 相减 
$P 18 F0;BZC P3           ; 如果相减结果为0，跳转到P3 （队内元素个数）
$P 19 4B 
$P 1A 61;LDI R1,04H       ; 装入比较值 
$P 1B 04; 
$P 1C 84;SUB R0,R1        ; 相减 
$P 1D F0;BZC P4           ; 如果相减结果为0，跳转到P4（队头元素）
$P 1E 54 
$P 1F 61;LDI R1,08H       ; 装入比较值 
$P 20 08; 
$P 21 84;SUB R0,R1        ; 相减 
$P 22 F0;BZC P5           ; 如果相减结果为0，跳转到P5（结束程序）
$P 23 61;



;######################################################
;------------------------------- 入队功能 ------------------------------    
;					待入队元素	-->	R0
;					[90H]		-->	R1
;					[91H]		-->	R2
;					R1 - R2		-->	R1	当前队列大小
;					队列容量		-->	R2
;					R1 - R2		-->	R1	看是否超过最大容量
;					如果超过，跳报错
;					[90H]		-->	R2
;					R0			-->	[R2]	入队
;					R2++
;					R2			-->	[90H]
;					跳回	
;######################################################
$P 24 20 ;IN R0,00         ; 输入入队元素   
$P 25 00 ; 
$P 26 C1;LAD R1,[90H]把队尾指针读到R1	
$P 27 90
$P 28 C3;LAD R2,[91H]把队头指针读到R2	
$P 29 91
;判断：R1 - R2再入队是否大于最大上限
$P 2A 89;SUB R1,R2 给R1; R1当前存储队列大小
$P 2B 62;LDI R2,栈容量
$P 2C 02;----------------------------------------------------------------------------队列容量
$P 2D 86;SUB R1,R2;比较栈顶和站容量顶 R1 - R2，即若<=0则为满了
$P 2E F0;BZC WARN
$P 2F 65 
;下面开始处理入队
$P 30 C2;LAD R1,[90H]把队尾指针读到R2
$P 31 90
$P 32 D8;STA R0,[RI],00 入队
$P 33 00
$P 34 72;INC R2   ;队尾指针++
$P 35 D2;STA R2 [90H]++后的队尾送回
$P 36 90
$P 37 E0;JMP 0C ;结束，回去
$P 38 09



;######################################################
;------------------------------- 出队功能 ------------------------------    
;					[90H]		-->	R1
;					[91H]		-->	R2
;					R1 - R2		-->	R1	当前队列大小
;					如果为空，跳报错
;					[91H]		-->	R2
;					[R2]			-->	R0	待出队数
;					OUT R2
;					R2++		-->	[90H]
;					跳回	
;######################################################
$P 39 C1;LAD R1,[90H]把队尾指针读到R1	
$P 3A 90
$P 3B C3;LAD R2,[91H]把队头指针读到R2	
$P 3C 91
$P 3D 89;SUB R1,R2 给R1; R1当前存储队列大小
$P 3E F0;BZC WARN
$P 3F 65 
;下面开始处理出队
$P 40 C3;LAD R2,[91H]把队头指针读到R2	
$P 41 91
$P 42 C8;LAD R0,[RI],00H ;待出队元素读到R0
$P 43 00;
$P 44 30;OUT 40H,R0;显示出栈元素
$P 45 40;
;R2++
$P 46 72;INC R2出队
$P 47 D2;STA 91H,R2;新队头送回去
$P 48 91;
$P 49 E0;JMP START 拜拜
$P 4A 09;09



;######################################################
;------------------------------- 展示元素个数 ------------------------------    
;					[90H]	-->	R0
;					[91H]	-->	R2
;					R0 - R2	-->	R0 当前队列大小
;					OUT R0
;					跳回
;######################################################
$P 4B C0;LAD R0,[90H]把队尾指针读到R0	
$P 4C 90

$P 4D C3;LAD R2,[91H]把队头指针读到R2	
$P 4E 91
$P 4F 88;SUB R0,R2. 给R0; R0当前存储队列大小
$P 50 30;OUT 40H,R0;显示出栈元素
$P 51 40;

$P 52 E0;JMP START 拜拜
$P 53 09;09



;######################################################
;------------------------------- 展示队头 ------------------------------    
;					【不改指针的出队】
;######################################################
$P 54 C1;LAD R1,[90H]把队尾指针读到R1	
$P 55 90
$P 56 C3;LAD R2,[91H]把队头指针读到R2	
$P 57 91
$P 58 89;SUB R1,R2 给R1; R1当前存储队列大小
$P 59 F0;BZC WARN
$P 5A 65 
$P 5B C3;LAD R2,[91H]把队头指针读到R2	
$P 5C 91
$P 5D C8;LAD R0,[RI],00H ;待出队元素读到R0
$P 5E 00;
$P 5F 30;OUT 40H,R0;显示出栈元素
$P 60 40;
$P 61 E0;JMP START 拜拜
$P 62 09;09

;######################################################
;---------------------------  结束程序功能  --------------------------    
;						执行HLT
;######################################################
$P 63 50;HALT
$P 64 50;HALT


;######################################################
;-----------------------------  报错功能  ----------------------------    
;				FFH		-->		R0
;				OUT		R0
;				跳 回	
;######################################################
$P 65 60;LDI R0,FFH       ; 上溢或下溢提示  WARN: 上溢或下溢提示
$P 66 FF; 
$P 67 30;OUT 40H,R0       ; 显示错误代码 
$P 68 40; 
$P 69 E0;JMP START        ; 跳转到START 
$P 6A 08; 
