;######################################################
;------------------------------- 栈的初始化 ------------------------------    
; 					92存储栈容量  
;					93存储栈顶指针  
;					A0栈底
;			初始化栈容量为2，栈顶指针开始于栈底相同,栈内元素个数为0
;
;######################################################
$P 00 61;LDI R1,02H
$P 01 02;
$P 02 D1;STA 92H,R1
$P 03  92;
$P 04 61;LDI R1,A0
$P 05 A0; 
$P 06 D1;STA 93H,R1
$P 07 93;




;######################################################
;------------------------------- 功能选择 ------------------------------    
;					1、入栈
;					2、出栈
;					3、展示元素个数
;					4、展示栈顶元素
;					5、清空栈功能
;					6、退出
;######################################################
$P 08 20;IN R0,00H      ; 把00H端口的数据放入R0（输入操作数）  START
$P 09 00;       
$P 0A 61; LDI R1,01H    ; 装入比较值
$P 0B 01;      
$P 0C 84;SUB R0,R1        ; 相减
$P 0D F0;BZC P1           ; 如果相减结果为0，跳转到P1（入栈功能）
$P 0E 28 
$P 0F 61;LDI R1,01H       ; 装入比较值
$P 10 01;
$P 11 84;SUB R0,R1        ; 相减
$P 12 F0;BZC P2           ; 如果相减结果为0，跳转到P2（出栈功能）
$P 13 3B 
$P 14 61;LDI R1,02H; 装入比较值 
$P 15 02;        
$P 16 84;SUB R0,R1        ; 相减 
$P 17 F0;BZC P3           ; 如果相减结果为0，跳转到P3（展示元素个数）） 
$P 18 55 
$P 19 61;LDI R1,04H       ; 装入比较值 
$P 1A 04; 
$P 1B 84;SUB R0,R1        ; 相减 
$P 1C F0;BZC P4           ; 如果相减结果为0，跳转到P4（展示栈顶元素） 
$P 1D 5E 
$P 1E 61;LDI R1,08H       ; 装入比较值 
$P 1F 08; 
$P 20 84;SUB R0,R1        ; 相减 
$P 21 F0;BZC P5           ; 如果相减结果为0，跳转到P5（清空栈功能） 
$P 22 66 
$P 23 61;LDI R1,10H
$P 24 10;
$P 25 84;SUB R0,R1
$P 26 F0;BZC P6
$p 27 78 ;




;######################################################
;------------------------------- 入栈功能 ------------------------------    
;					待入栈元素	-->	R0
;					93H			-->	R2
;					[93H]		-->	R1
;					R1++
;					A3H			-->	R2	最大栈顶
;					R2	-	R1	-->	R2	检测是否超出最大容量
;					如果超过，跳报错
;					R1			-->	R2
;					R1			-->	[93H]	新栈顶存回
;					R2			-->	[R2]	存数
;					跳回	
;
;######################################################
$P 28 20;IN R0,00         ; 输入入栈元素   
$P 29 00; 
$P 2A 62;LDI R2,93H    ;读取栈顶指针
$P 2B 93;
$P 2C C1;LAD R1,[93H]
$P 2D 93
$P 2E 71;INC R1   ;栈顶指针++
$P 2F 62;LDI R2,A3H;栈容量顶
$P 30 A3;
$P 31 86;SUB R2,R1;比较栈顶和站容量顶
$P 32 F0;BZC WARN
$P 33 7A 
$P 34 46;MOV R2,R1
$P 35 D1;STA R1
$P 36 93
$P 37 D8;STA R0,[RI],00
$P 38 00
$P 39 E0;JMP 0C
$P 3A 08



;######################################################
;------------------------------- 出栈功能 ------------------------------    
;					93H		-->	R2
;					[93H]	-->	R1	待出栈顶地址
;					A0		-->	R3
;					R1	-	R3	<=	0	栈空，跳报错
;					[93H]	-->	R2	待出栈顶地址
;					[R2]		-->	R0	待出栈元素
;					OUT	R0	送显示
;					[93H]	-->	R1		旧栈顶
;					R1--					出栈，栈顶--
;					R1		-->	[93H]	送回
;######################################################
$P 3B 62;LDI R2,93H  ;取栈顶指针
$P 3C 93;
$P 3D C1;LAD R1,93H   ;取栈顶指针内的值
$P 3E 93;
$P 3F 63;LDI R3,A0  ;R3置栈底指针
$P 40 A0;
$P 41 8D;SUB R1,R3 ;判断是否到栈底
$P 42 F0;BZC WARN     ;到了产生警告
$P 43 7A 
$P 44 C2;LAD R2,93H
$P 45 93;
$P 46 C8;LAD R0,[RI],00H
$P 47 00;
$P 48 30;OUT 40H,R0;显示出栈元素
$P 49 40;
$P 4A 60;LDI R0,00
$P 4B 00;
$P 4C D8;STA R0,[RI],00H
$P 4D 00;
$P 4E C1;LAD R1,93H
$P 4F 93;
$P 50 B1;DEC R1
$P 51 D1;STA 93H,R1;
$P 52 93;
$P 53 E0;JMP START
$P 54 08;08



;######################################################
;--------------------------- 显示栈内元素功能 --------------------------    
;					A0H		-->	R1	默认栈底
;					[93H]	-->	R3	栈顶地址
;					R3 - R1	-->	R3
;					OUT	R3
;					跳回
;######################################################
$P 55 61;LDI R1,A0
$P 56 A0;
$P 57 C3;LAD R3,93H
$P 58 93;
$P 59 87;SUB R3,R1;
$P 5A 3C;OUT 40,R3
$P 5B 40;
$P 5C E0;JMP START
$P 5D 08;



;######################################################
;---------------------------  展示栈顶元素  --------------------------    
;					93H		-->	R2
;					[93H]	-->	R1	待出栈顶地址
;					A0		-->	R3
;					R1	-	R3	<=	0	栈空，跳报错
;					[93H]	-->	R2	待出栈顶地址
;					[R2]		-->	R0	待出栈元素
;					OUT	R0	送显示
;					【相当于出栈不更新栈顶指针】
;######################################################
$P 5E C2;LAD R2,93H
$P 5F 93;
$P 60 C8;LAD R0,[RI],00H
$P 61 00;
$P 62 30;OUT 40H,R0
$P 63 40;
$P 64 E0;JMP START
$P 65 08;





;######################################################
;---------------------------  清空栈功能  --------------------------    
;					【相当于重新初始化】
;######################################################
$P 66 62;LDI R2,A0H
$P 67 A0;
$P 68 62;LDI R2,A0H
$P 69 A0
$P 6A D3;STA 93,R2
$P 6B 93;
$P 6C 63;LDI R3 A2H
$P 6D A2;
$P 6E 60;LDI R0,00H
$P 6F 00
$P 70 D8;STA R0,[RI],00H
$P 71 00;
$P 72 72;INC R2
$P 73 8B;SUB R3,R2
$P 74 F0;BZC START
$P 75 08;
$P 76 E0;JMP 6C
$P 77 6C; 




;######################################################
;---------------------------  结束程序功能  --------------------------    
;						执行HLT
;######################################################
$P 78 50;HALT
$P 79 50;HALT






;######################################################
;-----------------------------  报错功能  ----------------------------    
;				FFH		-->		R0
;				OUT		R0
;				跳 回	
;######################################################
$P 7A 60;LDI R0,FFH       ; 上溢或下溢提示  WARN: 上溢或下溢提示
$P 7B FF; 
$P 7C 30;OUT 40H,R0       ; 显示错误代码 
$P 7D 40; 
$P 7E E0;JMP START        ; 跳转到START 
$P 7F 08; 


$M 00 000001    ; NOP
$M 01 006D43    ; PC->AR, PC加1
$M 03 107070    ; MEM->IR, P<1>
$M 04 002405    ; RS->B
$M 05 04B201    ; A加B->RD
$M 06 002407    ; RS->B
$M 07 013201    ; A与B->RD
$M 08 106009    ; MEM->AR
$M 09 183001    ; IO->RD
$M 0A 106010    ; MEM->AR
$M 0B 000001    ; NOP
$M 0C 103001    ; MEM->RD
$M 0D 200601    ; RD->MEM
$M 0E 005341    ; A->PC
$M 0F 0000CB    ; NOP, P<3>
$M 10 280401    ; RS->IO
$M 11 103001    ; MEM->RD
$M 12 06B201    ; A加1->RD
$M 13 002414    ; RS->B
$M 14 05B201    ; A减B->RD
$M 15 002416    ; RS->B
$M 16 01B201    ; A或B->RD
$M 17 002418    ; RS->B
$M 18 02B201    ; A右环移->RD
$M 1B 005341    ; A->PC
$M 1C 10101D    ; MEM->A
$M 1D 10608C    ; MEM->AR, P<2>
$M 1E 10601F    ; MEM->AR
$M 1F 101020    ; MEM->A
$M 20 10608C    ; MEM->AR, P<2>
$M 21 063201    ;	
$M 28 101029    ; MEM->A
$M 29 00282A    ; RI->B
$M 2A 04E22B    ; A加B->AR
$M 2B 04928C    ; A加B->A, P<2>
$M 2C 10102D    ; MEM->A
$M 2D 002C2E    ; PC->B
$M 2E 04E22F    ; A加B->AR
$M 2F 04928C    ; A加B->A, P<2>
$M 30 001604    ; RD->A
$M 31 001606    ; RD->A
$M 32 006D48    ; PC->AR, PC加1
$M 33 006D4A    ; PC->AR, PC加1
$M 34 003401    ; RS->RD
$M 35 000035    ; NOP
$M 36 006D51    ; PC->AR, PC加1
$M 37 001612    ; RD->A
$M 38 001613    ; RD->A
$M 39 001615    ; RD->A
$M 3A 001617    ; RD->A
$M 3B 001621    ; NOP
$M 3C 006D5C    ; PC->AR, PC加1
$M 3D 006D5E    ; PC->AR, PC加1
$M 3E 006D68    ; PC->AR, PC加1
$M 3F 006D6C    ; PC->AR, PC加1